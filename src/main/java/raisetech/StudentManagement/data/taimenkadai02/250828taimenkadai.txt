-------------------------------------------------------------------------------
■課題１
「カレーを作る」という作業を実行しやすいように細かく分解し、それぞれにかかる時間
を見積もりましょう。
※１つのタスクが長すぎたり曖昧だったりしないように、１タスク＝１０～３０分程度を
意識しましょう。
見積もりにあたり事前条件の確認が必要な場合は、対面指導をする講師に質問しましょう。
-------------------------------------------------------------------------------
＜目的：見積もりの練習＞
１つの大きな作業を、複数の具体的な作業として細分化することで、より正確な作業時間
を見積もることができる。
＜例＞
レシピから食材リストを作成する(10分)
食材を購入する(30分)
食材を洗う(10分)
...
食材を切る（10分）
食材を炒め、水を入れて煮る（20分）
カレールーを入れて溶かし、ひと煮立ちさせる（10分）

解答例-------------------------------------------------------------------------------
   ＜目的：見積もりの練習＞
   １つの大きな作業を、複数の具体的な作業として細分化することで、より正確な作業時間
   を見積もることができる。
   ＜解答例＞
   1. 材料を確認・買い物リストを作成する（10分）
   2. スーパーで買い物をする（30分）
   3. 食材を洗う（10分）
   4. 玉ねぎ・にんじん・じゃがいも・肉を切る（15分）
   5. 材料を炒める（10分）
   6. 水を加えて煮込む（20分）
   7. アクを取る（5分）
   8. ルウを入れてさらに煮込む（10分）
   9. 味を確認して調整する（5分）
   10. ご飯を炊く（30分）
   11. 盛り付け・配膳する（10分）
   12. 後片付けをする（20分）

   ＜解説＞
   この課題の目的は、大きな作業（＝カレー作り）を細かい実行可能な単位に分解し、それ
   ぞれに見積もり時間をつける訓練をすることです。
   買い物して調理といった大きな塊でなく、作業内容を具体的かつある程度細かく実行でき
   る単位に分解できるとよい。

   またどこからどこまでをカレー作りとするのか？を自分なりに前提条件を定義することも
   重要。

   ----------------------------------------------------------------------------


-------------------------------------------------------------------------------
■課題２
会話から見積もり失敗とコミュニケーション課題を読み取り、改善方法を考えましょう。
以下は、ある開発チーム内の会話です。
この中にはタスク見積もりとチーム内コミュニケーションに関する問題点が含まれていま
す。会話をよく読み、以下の設問に答えましょう。
対面指導をする講師と議論しながら進めても大丈夫です。

マネージャー（佐藤）：「例のログイン画面、３時間で終わるって言ってたけど、もう
                        ２日たってるよね？どうなってる？」
開発担当（田中）    ：「はい、最初はHTMLとフォームくらいだからすぐ終わると思った
                        んですけど、セキュリティ対応とか、ユーザー情報の保存処理
                        が意外と面倒で…」
佐藤：              ：「え、それ最初に見積もったときに含まれていなかったの？」
田中：              ：「うーん…とりあえず『画面作るだけ』のつもりで考えていたの
                        で…あと、調べながら進めてる部分も多くて…」
佐藤：              ：「うーん、今後はもう少しちゃんと見積もってから進めようね」

【１】この会話の中で、開発担当者・マネージャー双方に存在する問題点をそれぞれ指摘
    しましょう（１００文字以上）。
    開発担当者の問題点：
    マネージャーの問題点：
【２】チーム全体としてタスク見積もりや進捗管理を改善するための具体的なアクション
    を２つ提案しましょう。
    改善策①：
    改善策②：
-------------------------------------------------------------------------------
【１】
    開発担当者の問題点：作業内容のタスク分解ができておらず見積もりが甘かった。問題が起きた時点で報告する必要がある。
    マネージャーの問題点：方向性の確認と、こまめな進捗確認ができていなかった。

【２】
    改善策①：業務が決まった段階で作業者がタスク分解を行い、マネージャーに見積もり報告を行い確認してもらう。
    改善策②：タスクごとのこまめな進捗報告。


-------------------------------------------------------------------------------
＜解答例＞
【１】
    開発担当者の問題点：
        タスクに含まれる内容（セキュリティ対応、データ保存）を十分に洗い出さずに
        3時間と見積もった点、および見積もり通りに進まないことが明らかになっても
        報告・相談をせず2日間放置していた点が問題です。進捗を共有しなければ、チ
        ーム全体に影響が及びます。
    マネージャーの問題点：
        3時間と見積もられたタスクが2日経っても完了していないにもかかわらず、マネ
        ージャー側からの状況確認が行われていなかったことが問題です。定期的な進捗
        確認や、フォローアップの仕組みが必要です。

【２】
    改善策①：
        タスクの見積もり時に、「この見積もりに何が含まれているか」を明示し、関係
        者とすり合わせを行う。必要に応じて調査タスクを分離しておく。
    改善策②：
        進捗報告のルール（例：1日1回の朝会やSlackでの進捗共有）を導入し、進捗が
        予定からずれた場合はすぐにチームで認識できるようにする。

----------------------------------------------------------------------------


-------------------------------------------------------------------------------
■課題３
要件に従ってフォームをHTMLで作成しましょう。
あなたは「会員登録画面」のフロントエンドを作成する担当者になりました。以下の要件
に従って、HTMLの<form>要素を使って記述しましょう。
制作にあたってはChatGPTといった生成AIを使ってもかまいません。

【要件】
    フォームの送信先URLは/registerにしましょう。
    送信方法はPOSTを使いましょう。
    以下の入力項目を含めましょう。
        ・名前（テキスト入力）
        ・メールアドレス（email入力）
        ・パスワード（password入力）
        ・性別（ラジオボタンで「男性」「女性」「その他」）
        ・趣味（複数選択可：チェックボックスで「読書」「旅行」「スポーツ」）
        ・自己紹介（テキストエリア）
        ・送信ボタンを設置しましょう。
        ・各入力欄には適切なlabelを付けましょう。

HTMLだけでなく、フォームの見栄えを良くするためにCSSも活用しましょう。

-------------------------------------------------------------------------------
下記サイト上でHTMLの実装テストを行うことができるので活用する。
https://codepen.io/pen/

＜下記HTMLに書き足していってください＞
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>会員登録フォーム</title>
</head>
<body>
  <label>名前：
    <input type="text" name="name" required>
  </label>
</body>
</html>


-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
＜解答例＞
https://codepen.io/Koyama-Yoshihito/pen/ogNdJVm

使い方が分からないタグがあれば…
参考）初心者向けHTMLリファレンス
https://catnose.me/learning/html

参考）HTML5 & CSS3 リファレンス
https://www.osaka-kyoiku.ac.jp/~joho/html5_ref/

★HTML
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>会員登録フォーム</title>
</head>
<body>
    <h1>会員登録</h1>
    <form action="/register" method="POST">
        <label>名前：
            <input type="text" name="name" required>
        </label>

        <label>メールアドレス：
            <input type="email" name="email" required>
        </label>

        <label>パスワード：
            <input type="password" name="password" required>
        </label>

        <fieldset class="gender-group">
            <legend>性別</legend>
            <label><input type="radio" name="gender" value="男性">男性</label>
            <label><input type="radio" name="gender" value="女性">女性</label>
            <label><input type="radio" name="gender" value="その他">その他</label>
        </fieldset>

        <fieldset class="hobby-group">
            <legend>趣味（複数選択可）</legend>
            <label><input type="checkbox" name="hobby" value="読書">読書</label>
            <label><input type="checkbox" name="hobby" value="旅行">旅行</label>
            <label><input type="checkbox" name="hobby" value="スポーツ">スポーツ</label>
        </fieldset>

        <label>自己紹介：
            <textarea name="introduction" rows="4" cols="40"></textarea>
        </label>

        <button type="submit">登録</button>
    </form>
</body>
</html>

★CSS
body {
    font-family: 'Helvetica Neue', sans-serif;
    background-color: #fafafa;
    color: #333;
    line-height: 1.6;
    margin: 0;
    padding: 0;
}

h1 {
    text-align: center;
    margin-top: 40px;
    font-size: 28px;
    font-weight: 600;
}

form {
    max-width: 480px;
    margin: 20px auto;
    padding: 32px;
    background-color: #ffffff;
    border: 1px solid #ddd;
    border-radius: 8px;
}

label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
}

input[type="text"],
input[type="email"],
input[type="password"],
textarea {
    width: 100%;
    padding: 10px 12px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 6px;
    font-size: 16px;
    box-sizing: border-box;
    background-color: #fff;
}

textarea {
    resize: vertical;
}

fieldset {
    border: none;
    padding: 0;
    margin-bottom: 20px;
}

.gender-group legend {
    font-weight: 500;
    margin-bottom: 8px;
}

.gender-group label {
    display: inline-block;
    margin-right: 20px;
    font-weight: normal;
}

.hobby-group label {
    display: block;
    margin-bottom: 8px;
}

button {
    width: 100%;
    padding: 12px;
    background-color: #222;
    color: #fff;
    border: none;
    border-radius: 6px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

button:hover {
    background-color: #444;
}

input:focus,
textarea:focus {
    outline: none;
    border-color: #4CAF50;
    box-shadow: 0 0 3px rgba(76, 175, 80, 0.5);
}

-------------------------------------------------------------------------------

